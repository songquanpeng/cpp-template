name: Build Releases
permissions:
  contents: write

on:
  push:
    tags:
      - '*'

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x86_64]

    steps:
      - uses: actions/checkout@v2

      - name: Set up MSYS on Windows
        if: ${{ matrix.os == 'windows-latest' }}
        uses: msys2/setup-msys2@v2

      - name: Update Version Info
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            sed -i "" "s/v0.0.0/$(git describe --tags)/g" ./src/main.cpp
          else
            sed -i "s/v0.0.0/$(git describe --tags)/g" ./src/main.cpp
          fi

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cmake $GITHUB_WORKSPACE -G"MSYS Makefiles" -DCMAKE_BUILD_TYPE=$BUILD_TYPE
          else
            cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
          fi

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: |
          cmake --build . --config $BUILD_TYPE
          ls

      - name: Rename
        shell: bash
        run: |
          if [ "${{ matrix.os }}" != "windows-latest" ]; then
            mv ${{runner.workspace}}/build/template ${{runner.workspace}}/build/template-${{ matrix.os }}
          fi

      - name: Upload
        uses: softprops/action-gh-release@v0.1.13
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{runner.workspace}}/build/template*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
